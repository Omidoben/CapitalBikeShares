name: Bike Share Data Collection
on:
  schedule:
    - cron: '0 */4 * * *'  # Run every 4 hours
  workflow_dispatch:  # Allow manual triggering

jobs:
  collect-data:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: bikeshare_data
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Configure MySQL
        run: |
          sudo mysql -h 127.0.0.1 -u root -prootpassword -e "SET GLOBAL local_infile = 1;"
          sudo mysql -h 127.0.0.1 -u root -prootpassword -e "SHOW VARIABLES LIKE 'local_infile';"

          # Create user if not exists and grant privileges
          sudo mysql -h 127.0.0.1 -u root -prootpassword -e "
            CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'%' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';
            GRANT ALL PRIVILEGES ON bikeshare_data.* TO '${{ secrets.DB_USER }}'@'%';
            GRANT FILE ON *.* TO '${{ secrets.DB_USER }}'@'%';
            FLUSH PRIVILEGES;
          "

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libmysqlclient-dev \
            libproj-dev \
            libgdal-dev \
            libudunits2-dev \
            libgeos-dev \
            libssl-dev \
            libcurl4-openssl-dev \
            libxml2-dev \
            mysql-client

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-renv: true

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ~/.local/share/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Install R packages
        run: |
          Rscript -e "install.packages('renv', repos = 'https://packagemanager.posit.co/cran/latest')"
          Rscript -e "renv::restore(repos = 'https://packagemanager.posit.co/cran/latest')"

      - name: Set up environment variables
        env:
          DB_HOST: 127.0.0.1
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "DB_HOST=$DB_HOST" >> .Renviron
          echo "DB_USER=$DB_USER" >> .Renviron
          echo "DB_PASSWORD=$DB_PASSWORD" >> .Renviron

      - name: Create pins directories
        run: |
          mkdir -p StationInfoPin
          mkdir -p StationStatusPin

      - name: Run Master Workflow Script
        run: |
          Rscript update_app.R

      - name: Commit updated data
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || (git commit -m "Update bike share data" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: workflow-logs
          path: |
            .Rout
            *.log

